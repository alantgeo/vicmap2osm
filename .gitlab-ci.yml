image: "debian:buster-slim"

cache: &global_cache
  key: global
  paths:
    - .yarn
    - node_modules
    - data/vicmap.geojson

stages:
  - docker
  - prepare
  - build

docker prepare:
  image: docker:latest
  services:
    - docker:dind
  stage: docker
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":prepare -f "docker/prepare.Dockerfile" .
    - docker push "$CI_REGISTRY_IMAGE":prepare
  after_script:
    - docker logout $CI_REGISTRY
  when: manual

docker build:
  image: docker:latest
  services:
    - docker:dind
  stage: docker
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":build -f "docker/build.Dockerfile" .
    - docker push "$CI_REGISTRY_IMAGE":build
  after_script:
    - docker logout $CI_REGISTRY
  when: manual

docker conflate:
  image: docker:latest
  services:
    - docker:dind
  stage: docker
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE":conflate -f "docker/conflate.Dockerfile" .
    - docker push "$CI_REGISTRY_IMAGE":conflate
  after_script:
    - docker logout $CI_REGISTRY
  when: manual

prepare:
  stage: prepare
  cache:
    <<: *global_cache
    policy: push
  script:
    - apt-get update && apt-get install -y curl gnupg gdal-bin unzip wget make
    - curl -fsSL https://deb.nodesource.com/setup_12.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update && apt-get install -y yarn nodejs
    - yarn install
    - mkdir -p dist
    - make data/vicmap.geojson
  when: manual

build:
  stage: build
  cache:
    <<: *global_cache
    policy: pull
  script:
    - apt-get update && apt-get install -y curl gnupg make
    - curl -fsSL https://deb.nodesource.com/setup_12.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update && apt-get install -y yarn nodejs
    - yarn install
    - yarn run test
    - mkdir -p dist data
    - mkdir -p data/vicmap/ll_gda94/sde_shape/whole/VIC/VMADD/layer
    - touch data/VICMAP_ADDRESS.zip
    - touch data/vicmap/ll_gda94/sde_shape/whole/VIC/VMADD/layer/address.shp
    - touch --no-create data/vicmap.geojson
    - make dist/vicmap-osm.geojson
    - make dist/vicmap-osm-uniq.geojson
    - make dist/vicmap-osm-uniq-flats.geojson
  artifacts:
    name: "build"
    paths:
      - dist
      - debug
